name: ANN benchmarks

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# Cancel the workflow for the previous commit when the new commit is pushed.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: True

jobs:
  unit-tests:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3 # Pull the repository
      - run: sudo apt-get update && sudo apt-get install -y libhdf5-dev python3-numpy python3-scipy python3-matplotlib python3-sklearn
      - run: pip3 install --quiet -r requirements.txt
      - run: pytest

  run-benchmarks:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        dataset: [random-xs-20-angular]
        library:
          # - annoy
          # - balltree
          - bruteforce
          - ckdtree
          # - diskann
          # - dolphinnpy
          # - elasticsearch
          # - elastiknn
          # - faiss
          # - flann
          # - glass
          # - hnswlib
          # - kdtree
          # - luceneknn
          # - milvus
          # - mrpt
          # - nndescent
          # - n2
          # - nmslib
          # - onng_ngt
          # - opensearchknn
          # - panng_ngt
          # - pg_embedding
          # - pgvector
          # - pynndescent
          # - redisearch
          # - qdrant
          # - qg_ngt
          # - qsg_ngt
          # - scann
          # - sptag
          # - tinyknn
          # - vald
          # - vearch
          # - vespa
          # - voyager
          # - weaviate
        # include:
          # - library: pynndescent
          #   dataset: random-xs-16-hamming
          # - library: datasketch
          #   dataset: random-s-jaccard
          # - library: pynndescent
          #   dataset: random-s-jaccard

    name: ${{ matrix.library }} (${{ matrix.dataset }})

    env:
      LIBRARY: ${{ matrix.library }}
      DATASET: ${{ matrix.dataset }}

    steps:
    - uses: actions/checkout@v3 # Pull the repository

    - name: Install OS Dependencies
      run: sudo apt-get update && sudo apt-get install -y libhdf5-dev python3-numpy python3-scipy python3-matplotlib python3-sklearn

    - name: Install Project Dependencies
      run: pip3 install --quiet -r requirements.txt

    - name: Build Library Docker Image
      run: python3 install.py

    - name: Run the benchmark
      run: |
        # Determine the last library in the matrix dynamically
        LAST_INDEX=$(( ${#LIBRARY[@]} - 1 ))
        LAST_LIBRARY=${LIBRARY[${LAST_INDEX}]}

        # Run plotting and other post-processing steps after all benchmarks are completed
        if [[ $LIBRARY == $LAST_LIBRARY ]]; then
          python3 run.py --dataset $DATASET --run-disabled --timeout 300
          python3 run.py --dataset $DATASET --run-disabled --batch --timeout 300
          sudo chmod -R 777 results/
          python3 plot.py --dataset $DATASET --output plot.png
          python3 plot.py --dataset $DATASET --output plot-batch.png --batch
          python3 data_export.py --out test.csv
          python3 create_website.py --outputdir . --scatter --latex
        fi
    
    - name: Combine Results
      run: |
        mkdir combined_results  # Create a directory to store combined results
        # Move the specific files or directories you want to include
        cp plot.png combined_results/plot.png
        cp plot-batch.png combined_results/plot-batch.png
        cp test.csv combined_results/test.csv
        cp -r . combined_results/all
        
        # Optionally, create a ZIP archive for convenience
        zip -r combined_results.zip combined_results/
      
    - name: Upload Combined Results
      uses: actions/upload-artifact@v2
      with:
        name: combined-results-artifact  # Name for your artifact
        path: combined_results/  
